{"version":3,"sources":["components/SearchBar/SearchBar.js","components/ImageGallery/ImageGalleryItem.js","components/Button/Button.js","services/fetchImages.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["SearchBar","state","query","handleQueryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","images","onClick","map","image","src","webformatURL","alt","tags","id","Button","fetchImages","page","a","fetch","response","ok","json","Promise","reject","Error","ImageGallery","error","pages","status","loadMoreHandler","prevState","autoScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","resetPage","prevProps","prevQuery","nextQuery","prevPage","nextPage","then","totalHits","totalPages","Math","ceil","hits","catch","color","height","width","message","modalRoot","querySelector","Modal","handleKeyDown","e","code","onClose","handleOverlayClick","target","addEventListener","removeEventListener","createPortal","modalImage","largeImageURL","App","showModal","closeModal","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c225782e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\n\nclass SearchBar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleQueryChange = event => {\n    this.setState({ query: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.query.trim() === '') {\n      toast('Write search query');\n      return;\n    }\n\n    this.props.onSubmit(this.state.query);\n\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n            <ImSearch />\n          </button>\n\n          <input\n            value={this.state.query}\n            onChange={this.handleQueryChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default SearchBar;\n","import PropTypes from 'prop-types';\n\nfunction ImageGalleryItem({ images, onClick }) {\n  return images.map(image => (\n    <li className=\"ImageGalleryItem\" key={image.id + image.tags}>\n      <img\n        onClick={() => onClick(image)}\n        src={image.webformatURL}\n        alt={image.tags}\n        className=\"ImageGalleryItemImage\"\n      />\n    </li>\n  ));\n}\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" className=\"Button\" onClick={onClick}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","export default async function fetchImages(query, page) {\n  const response = await fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=22289031-1611b833cc5adb7f34a3078c9&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return await Promise.reject(new Error('Something went wrong'));\n}\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Button from '../Button';\nimport fetchImages from '../../services/fetchImages';\n\nclass ImageGallery extends Component {\n  static propTypes = {\n    query: PropTypes.string,\n    onClick: PropTypes.func,\n  };\n\n  state = {\n    images: [],\n    error: null,\n    pages: 0,\n    page: 1,\n    status: 'idle',\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevProps.query;\n    const nextQuery = this.props.query;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevQuery !== nextQuery) {\n      this.resetPage();\n      this.setState({ status: 'pending' });\n      await fetchImages(nextQuery, 1)\n        .then(images => {\n          // console.log(images);\n          if (images.totalHits === 0) {\n            throw new Error(`There are no pictures with such \"${nextQuery}\"`);\n          }\n          const totalPages = Math.ceil(images.totalHits / 12);\n          this.setState({\n            images: [...images.hits],\n            status: 'resolved',\n            pages: totalPages,\n          });\n        })\n        .catch(error => {\n          // console.log(error);\n          this.setState({ error, status: 'rejected' });\n        });\n\n      this.autoScroll();\n    }\n\n    if (prevPage !== nextPage && nextPage > 1) {\n      this.setState({ status: 'more-pending' });\n      await fetchImages(nextQuery, nextPage)\n        .then(images => {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images.hits],\n            status: 'resolved',\n          }));\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n      this.autoScroll();\n    }\n  }\n\n  loadMoreHandler = () => {\n    this.setState(prevState => {\n      return { page: prevState.page + 1 };\n    });\n  };\n\n  autoScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  resetPage = () => {\n    this.setState({ page: 1 });\n  };\n\n  render() {\n    const { images, error, status, page, pages } = this.state;\n\n    if (status === 'idle') {\n      return <h1>Please, enter something</h1>;\n    }\n\n    if (status === 'pending') {\n      return (\n        <Loader type=\"TailSpin\" color=\"#3f51b5\" height={180} width={180} />\n      );\n    }\n\n    if (status === 'more-pending') {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            <ImageGalleryItem images={images} onClick={this.props.onClick} />\n          </ul>\n          <Loader type=\"TailSpin\" color=\"#3f51b5\" height={180} width={180} />\n        </>\n      );\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            <ImageGalleryItem images={images} onClick={this.props.onClick} />\n          </ul>\n          {pages > page ? <Button onClick={this.loadMoreHandler} /> : <></>}\n        </>\n      );\n    }\n\n    if (status === 'rejected') {\n      return <h2>{error.message}</h2>;\n    }\n  }\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ImageGallery;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  static propTypes = {\n    modalImage: PropTypes.object,\n    onClose: PropTypes.func,\n  };\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"overlay\" onClick={this.handleOverlayClick}>\n        <div className=\"modal\">\n          <img\n            alt={this.props.modalImage.tags}\n            src={this.props.modalImage.largeImageURL}\n          />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport SearchBar from 'components/SearchBar';\nimport ImageGallery from 'components/ImageGallery';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  state = {\n    query: '',\n    showModal: false,\n    modalImage: '',\n  };\n\n  showModal = modalImage => {\n    this.setState({ showModal: true, modalImage });\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  handleFormSubmit = query => {\n    this.setState({ query });\n  };\n\n  render() {\n    const { query, showModal, modalImage } = this.state;\n\n    return (\n      <div className=\"App\">\n        {showModal && (\n          <Modal modalImage={modalImage} onClose={this.closeModal} />\n        )}\n        <SearchBar onSubmit={this.handleFormSubmit} />\n        <ImageGallery query={query} onClick={this.showModal} />\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}